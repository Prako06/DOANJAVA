/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import DAO.HangHoaDAO;
import DAO.MyConnect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.HangHoa;

/**
 *
 * @author Admin
 */
public class HoaDonJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HoaDonJPanel
     */
    Connection conn = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    int q, i;
    
    public void GetDataTable() throws SQLException{       
        try {
            conn = MyConnect.getConnection();
            ps = conn.prepareStatement("SELECT * FROM chbqa.HoaDon");
            rs = ps.executeQuery();
        
            ResultSetMetaData stData = rs.getMetaData();
        
            q = stData.getColumnCount();
        
            DefaultTableModel RecordTable = (DefaultTableModel)tbHoaDon.getModel();
            RecordTable.setRowCount(0);
               
            while (rs.next()){
            Vector columnData = new Vector();
            for(i=1;i<=q;i++){
                columnData.add(rs.getInt("MaHD"));
                columnData.add(rs.getString("NgayLap"));
                columnData.add(rs.getInt("TongTien"));
                columnData.add(rs.getString("MaNV"));
                columnData.add(rs.getString("MaKH"));
            }
            RecordTable.addRow(columnData);
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
      
    
    public HoaDonJPanel() throws SQLException{
        initComponents();
        GetDataTable();
    }

     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbHoaDon = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbCTHD = new javax.swing.JTable();

        tbHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Ma HD", "Ngay Tao", "TongTien", "Ma NV", "Ma KH"
            }
        ));
        tbHoaDon.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tbHoaDon.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tbHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbHoaDon);

        tbCTHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "TenHang", "MaHang", "SoLuong", "DonGia"
            }
        ));
        jScrollPane2.setViewportView(tbCTHD);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1482, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    String Ma;
    private void tbHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHoaDonMouseClicked
        int SelectedRows = tbHoaDon.getSelectedRow(); 
        HangHoaDAO hhdao = new HangHoaDAO();
        Ma = tbHoaDon.getModel().getValueAt(SelectedRows,0).toString();
        
        try {
            conn = MyConnect.getConnection();
            ps = conn.prepareStatement("SELECT * FROM chbqa.cthd WHERE MaHD = '"+ Ma +"'");
            rs = ps.executeQuery();
        
            ResultSetMetaData stData = rs.getMetaData();
        
            q = stData.getColumnCount();
        
            DefaultTableModel RecordTable = (DefaultTableModel)tbCTHD.getModel();
            RecordTable.setRowCount(0);
               
            while (rs.next()){
            Vector columnData = new Vector();
            for(i=1;i<=q;i++){       
                
          
                int ma = rs.getInt("MaHang");
                HangHoa hh = hhdao.getHH(ma);
                columnData.add(hh.getTenHang());
                
                columnData.add(rs.getString("MaHang"));
                /*String ma = tbHoaDon.getModel().getValueAt(SelectedRows,0).toString();
                String sql = "SELECT DISTINCT TenHang FROM chbqa.hanghoa INNER JOIN chbqa.cthd ON hanghoa.MaHang = cthd.MaHang WHERE cthd.MaHang ='"+ ma +"' ";
                Statement stm = conn.createStatement();
                ResultSet rsn = stm.executeQuery(sql);
                while(rs.next())
                {
                    columnData.add(rsn.getString(1));
                }*/
                
                columnData.add(rs.getString("SoLuong"));
                columnData.add(rs.getInt("DonGia"));
                
                
            }
            RecordTable.addRow(columnData);
        }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tbHoaDonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbCTHD;
    private javax.swing.JTable tbHoaDon;
    // End of variables declaration//GEN-END:variables
}
